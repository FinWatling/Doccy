@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Doccy</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (!isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Login">
                    <span class="bi bi-pencil-fill" aria-hidden="true"></span> Log in
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/SignUp">
                <span class="bi bi-pencil-fill" aria-hidden="true"></span> Sign Up
            </NavLink>
            </div>
        }
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Documents">
                <span class="bi bi-pencil-fill" aria-hidden="true"></span> My Documents
            </NavLink>
            </div>
        }
        @if (!isVerified && isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Verification">
                    <span class="bi bi-pencil-fill" aria-hidden="true"></span> Verify Email
                </NavLink>
            </div>
        }
        
    </nav>
</div>

@code{

    bool isLoggedIn;
    bool isVerified;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
            isLoggedIn = (await ProtectedSessionStore.GetAsync<bool>("isLoggedIn")).Value;
            isVerified = (await ProtectedSessionStore.GetAsync<bool>("isVerified")).Value;

            StateHasChanged();
    }
    
}